@page "/example02"
@rendermode InteractiveServer

<h3>Search Movies</h3>

<form  @onsubmit="SubmitForm">
    <input type="text" @bind="searchTerm" placeholder="Avengers, Matrix, ..." class="search-input" />
    <button type="submit" class="search-button">Search</button>
</form>

@if (movies != null && movies.Count > 0)
{
    <ul class="movie-list">
        @foreach (var movie in movies)
        {
            <li class="movie-item">
                <article>
                    <img src="@movie.Poster" alt="@movie.Title" class="movie-poster" />
                    <h2 class="movie-title">@movie.Title <span class="movie-year">@movie.Year</span></h2>
                </article>
            </li>
        }
    </ul>
}
else
{
    <p class="no-movies">Movies not found.</p>
}

@code {
    private string searchTerm;
    private List<Movie> movies;

    public class Movie
    {
        public string Title { get; set; }
        public string Year { get; set; }
        public string Poster { get; set; }
        public string Rank { get; set; }
        public string Actors { get; set; }
    }

    private async Task SubmitForm()
    {
        try
        {
            using var httpClient = new HttpClient();
            var response = await httpClient.GetFromJsonAsync<Dictionary<string, string>>(($"https://search.imdbot.workers.dev/?q={searchTerm}"));

            if (response != null && response.ContainsKey("description"))
            {
                var description = response["description"];
                var moviesData = System.Text.Json.JsonSerializer.Deserialize<List<Dictionary<string, string>>>(description);

                movies = moviesData.Select(movie => new Movie
                    {
                        Title = movie.ContainsKey("#TITLE") ? movie["#TITLE"] : "",
                        Year = movie.ContainsKey("#YEAR") ? movie["#YEAR"] : "",
                        Poster = movie.ContainsKey("#IMG_POSTER") ? movie["#IMG_POSTER"] : "",
                        Rank = movie.ContainsKey("#RANK") ? movie["#RANK"] : "",
                        Actors = movie.ContainsKey("#ACTORS") ? movie["#ACTORS"] : ""
                    }).ToList();
            }
            else
            {
                movies = new List<Movie>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching movies: {ex.Message}");
        }
    }
}
